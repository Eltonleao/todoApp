{"version":3,"sources":["components/TodoItem.js","components/Todos.js","components/layouts/header.js","components/addTodo.js","components/pages/about.js","App.js","serviceWorker.js","index.js"],"names":["TodoItem","getStyle","background","textDecoration","props","todo","completed","this","id","title","style","type","onChange","markComplete","bind","onClick","delTodo","btnStyle","Component","color","border","padding","borderRadius","cursor","float","Todos","todos","map","key","headerStyle","textAlign","linkStyle","Header","to","AddTodo","state","e","setState","target","name","value","onSubmit","preventDefault","addTodo","display","flex","placeholder","className","About","Fragment","App","axios","delete","then","res","filter","post","data","get","exact","path","render","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.746668f1.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass TodoItem extends Component{\r\n\r\n    getStyle = () => {\r\n        return {\r\n            background: '#f4f4f4',\r\n            textDecoration: this.props.todo.completed ? 'line-through' : 'none'\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { id,title } = this.props.todo;\r\n        return(\r\n            <div style={this.getStyle()}>\r\n                <p>\r\n                    <input type=\"checkBox\" onChange={this.props.markComplete.bind(this, id)}></input>\r\n                    { title }\r\n                    <button onClick={this.props.delTodo.bind(this, id)} style={btnStyle}>x</button>\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst itemStyle = {\r\n    backgroundColor: \"#f4f4f4\"\r\n}\r\n\r\nconst btnStyle = {\r\n    background: \"#ff0000\",\r\n    color: \"fff\",\r\n    border: \"none\",\r\n    padding: \"5px 10px\",\r\n    borderRadius: \"50%\",\r\n    cursor: 'pointer',\r\n    float: \"right\"\r\n}\r\n\r\nexport default TodoItem;","import React, {Component} from 'react';\r\nimport TodoItem from './TodoItem'\r\n\r\nexport default class Todos extends Component{\r\n\r\n    render(){\r\n        return this.props.todos.map((todo) => (\r\n        <TodoItem key={todo.id} todo={todo} markComplete={this.props.markComplete} delTodo={this.props.delTodo}/>\r\n        ));\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Header(){\r\n    return (\r\n        <header style={headerStyle}>\r\n            <h1>Todo List</h1>\r\n            <Link style={linkStyle} to=\"/\">Home</Link> | <Link style={linkStyle} to=\"/about\">About</Link>\r\n        </header>\r\n    )\r\n}\r\n\r\nconst headerStyle = {\r\n    background: \"#333\",\r\n    color: \"#fff\",\r\n    textAlign : \"center\",\r\n    padding: \"0px\"\r\n     \r\n}\r\n\r\nconst linkStyle = {\r\n    color: \"#fff\",\r\n    textDecoration: \"none\"\r\n}\r\n\r\nexport default Header;","import React, {Component} from 'react';\r\n\r\nexport class AddTodo extends Component{\r\n\r\n    state = {\r\n        title: ''\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value })\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.addTodo(this.state.title);\r\n        this.setState({ title: '' });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <form style={{display: 'flex'}} onSubmit={this.onSubmit}>\r\n                <input \r\n                type=\"text\" \r\n                name=\"title\" \r\n                style={{flex: '10'}}\r\n                placeholder=\"Add Todo\"\r\n                value={this.state.title}\r\n                onChange = {(e) => this.onChange(e)}\r\n                >\r\n                </input>\r\n                \r\n                <input\r\n                type=\"submit\"\r\n                value=\"Submit\"\r\n                className=\"btn\"\r\n                style={{flex: '1'}}\r\n                >\r\n                </input>\r\n            </form>\r\n        )\r\n        \r\n    }\r\n}\r\n\r\nexport default AddTodo;","import React, {Component} from 'react';\r\n\r\nfunction About(){\r\n    return(\r\n        <React.Fragment>\r\n            <h1>About</h1>\r\n            <p>This is my firt Todo Aplication with React (:</p>\r\n        </React.Fragment>\r\n    )\r\n\r\n}\r\n\r\nexport default About;","import React, {Component} from 'react';\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\nimport Todos from './components/Todos';\nimport Header from './components/layouts/header';\nimport AddTodo from './components/addTodo'\nimport { declareVariable } from '@babel/types';\nimport uuid from 'uuid';\nimport About from \"./components/pages/about\"\nimport axios from 'axios';\n\n\nclass App extends Component{\n\n  state = {\n    todos :[ ]\n  }\n\n  componentDidMount(){\n    axios.get('https://jsonplaceholder.typicode.com/todos?_limit=10')\n    .then(res => this.setState({todos: res.data}));\n  }\n\n  markComplete = (id) =>{\n    this.setState({todos: this.state.todos.map(todo => {\n      if(todo.id === id){\n        todo.completed = !todo.completed\n      }\n      return todo;\n    })});\n  }\n\n  delTodo = (id)=>{\n    axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\n    .then(res => this.setState({ todos: [...this.state.todos.filter(todo => todo.id !== id)]}))\n  }\n\n  addTodo = (title) =>{\n    axios.post('https://jsonplaceholder.typicode.com/todos', {title: title, completed: false})\n    .then(res =>  this.setState({\n      todos: [...this.state.todos, res.data]\n    }));\n\n  }\n\n  render(){\n    return(\n      <Router>\n         <div className=\"App\">\n        <div className=\"container\">\n          <Header></Header>\n          <Route exact path=\"/\" render={props => (\n            <React.Fragment>\n              <AddTodo addTodo={this.addTodo}></AddTodo>\n              <Todos todos={this.state.todos} markComplete={this.markComplete} delTodo={this.delTodo}></Todos>\n            </React.Fragment>\n          )}/>\n          <Route path=\"/about\" component={About}/>\n        </div>\n      </div>\n\n      </Router>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}